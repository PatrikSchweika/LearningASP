# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: dotnet-aws

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Format
      run: dotnet format --verify-no-changes --verbosity diagnostic
    - name: Pack
      run: |
        dotnet publish -c Release --output "${{ github.workspace }}/${{github.run_id}}"
        cd ${{github.run_id}}
        zip -r ../${{github.run_id}}.zip .
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deploy-files
        path: ${{github.run_id}}.zip
  deploy:
    
    environment: Master
    runs-on: ubuntu-latest
    needs: build

    env:
      ELASTIC_BEANSTALK_NAME: ${{ vars.ELASTIC_BEANSTALK_NAME }}
      ELASTIC_BEANSTALK_ENV_NAME: ${{ vars.ELASTIC_BEANSTALK_ENV_NAME }}
      AWS_REGION: ${{ vars.AWS_REGION }}

    steps:
      - uses: actions/download-artifact@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Deploy
        run: |
          aws s3 cp "deploy-files/${{github.run_id}}.zip" s3://elasticbeanstalk-${{ env.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}/artifact/LearningASP-dev/
          aws elasticbeanstalk create-application-version --application-name $ELASTIC_BEANSTALK_NAME --version-label ${{github.run_id}} --description ${{github.run_id}} --source-bundle S3Bucket="elasticbeanstalk-${{ env.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="artifact/LearningASP-dev/${{github.run_id}}.zip"
          aws elasticbeanstalk update-environment --application-name $ELASTIC_BEANSTALK_NAME --environment-name $ELASTIC_BEANSTALK_ENV_NAME --version-label ${{github.run_id}}
          aws elasticbeanstalk wait environment-updated --application-name $ELASTIC_BEANSTALK_NAME --environment-name $ELASTIC_BEANSTALK_ENV_NAME